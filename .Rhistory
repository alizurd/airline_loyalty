install.packages(tidyverse)
install.packages("tidyverse")
library(tidyvese)
library(tidyverse)
library(tidyverse)
if (!requireNamespace("remotes", quietly = TRUE)) {
install.packages("remotes")
}
remotes::install_github("ebird/ebirdst")
library(dyplr)
library(ebirdst)
install.packages("ebirdst")
library(ebirdst)
view(ebirdst_runs)
install.packages("tidyverse")
install.packages("openintro")
install.packages("openintro")
library(tidyverse)
library(openintro)
install.packages("janitor")
library(janitor)
library(moments)
library(dplyr)
library(tidyverse)
library(ggplot2)
setwd("/Users/alyssabueno/Desktop/airline_loyalty")
history <- read.csv("customer_loyalty_history.csv", stringsAsFactors = FALSE)
View(history)
# change column names to lowercase and snakecase
history <- clean_names(history)
# change NA to 0 or NULL
history[is.na(history)] <- 0
# remove spaces from the postal codes
history$postal_code <- gsub(" ", "", history$postal_code)
# at this point i want to download data and explore in bigquery
write.csv(history, "loyalty_history.csv, na = "")
# check for skew
check_skewness <- function(history) {
sapply(history, function(col) if (is.numeric(col)) skewness(col, na.rm = TRUE) else NA)
}
# clv is positively skewed >3
# salary is positively skewed = 1.2
history$clv <- log1p(history$clv)
history$salary <- sqrt(log1p(history$salary))
# sqrt transformation resulted warning message: NaNs
# checking how many 0s are in column
summary(history$salary) # there are 20 0s
# at this point i want to download data and explore in bigquery
write.csv(history, "loyalty_history.csv, na = "")
# at this point i want to download data and explore in bigquery
write.csv(history, "loyalty_history.csv", na = "")
library(tidyverse)
library(dplyr)
library(moments)
setwd("/Users/alyssabueno/Desktop/airline_dataset")
setwd("/Users/alyssabueno/Desktop/airline_loyalty")
flights <- read.csv("customer_flight_activity.csv", stringsAsFactors = FALSE)
View(flights)
##changing column names
flights <- clean_names(flights)
##checking the data types in each column
str(flights)
flights$loyalty_number <- as.numeric(flights$loyalty_number)
flights$month <- as.numeric(flights$month)
flights$total_flights <- as.numeric(flights$total_flights)
flights$distance <- as.numeric(flights$distance)
flights$points_accumulated <- as.numeric(flights$points_accumulated)
flights$points_redeemed <- as.numeric(flights$points_redeemed)
flights$dollar_cost_points_redeemed <- as.numeric(flights$dollar_cost_points_redeemed)
flights$year <- as.numeric(flights$year)
#download as csv
write.csv("flights.csv")
#download as csv
flights <- write.csv("flights.csv")
setwd("/Users/alyssabueno/Desktop/airline_loyalty")
flights <- read.csv("customer_flight_activity.csv", stringsAsFactors = FALSE)
View(flights)
##changing column names
flights <- clean_names(flights)
##checking the data types in each column
str(flights)
##making columns numeric
flights$loyalty_number <- as.numeric(flights$loyalty_number)
flights$month <- as.numeric(flights$month)
flights$total_flights <- as.numeric(flights$total_flights)
flights$distance <- as.numeric(flights$distance)
flights$points_accumulated <- as.numeric(flights$points_accumulated)
flights$points_redeemed <- as.numeric(flights$points_redeemed)
flights$dollar_cost_points_redeemed <- as.numeric(flights$dollar_cost_points_redeemed)
flights$year <- as.numeric(flights$year)
#download as csv
write.csv(flights, "flights.csv", na = "")
install.packages("quantmod")
library(quantmod)
getSymbols("AAPL", src = "yahoo", from = '2024-01-01' to = '2024-12-31')
getSymbols("AAPL", src = "yahoo", from = '2024-01-01', to = '2024-12-31')
head(AAPL)
View(APPL)
# making columns numeric
str(history)
history$loyalty_number <- as.numeric(history$loyalty_number)
history$salary <- as.numeric(history$salary)
history$clv <- as.numeric(history$clv)
history$enrollment_year <- as.numeric(history$enrollment_year)
history$enrollment_month <- as.numeric(history$enrollment_month)
decostand(sharp, method = "standardize", margin = 2, na.rm = FALSE)
library(vegan)
decostand(sharp, method = "standardize", margin = 2, na.rm = FALSE)
install.packages("vegan")
install.packages("janitor")
library(janitor)
library(vegan)
library(ggplot2)
setwd("/Users/alyssabueno/Desktop/sharp")
sharp <- read.csv("SHARP_surveyData_2014.csv", stringsAsFactors = FALSE)
View(sharp)
# remove NAs
sharp[is.na(sharp)] <- 0
# remove spaces and apply snakecase to col names
sharp <- clean_names(sharp)
str(sharp) # check column types
# make columns numeric
sharp$total_count_n <- as.numeric(sharp$total_count_n)
sharp$tempf <- as.numeric(sharp$tempf)
setwd("/Users/alyssabueno/Desktop/sharp")
sharp <- read.csv("SHARP_surveyData_2014.csv", stringsAsFactors = FALSE)
View(sharp)
# remove NAs
sharp[is.na(sharp)] <- 0
# remove spaces and apply snakecase to col names
sharp <- clean_names(sharp)
library(janitor)
# remove spaces and apply snakecase to col names
sharp <- clean_names(sharp)
str(sharp) # check column types
# make columns numeric
sharp$total_count_n <- as.numeric(sharp$total_count_n)
sharp$tempf <- as.numeric(sharp$tempf)
sharp$windsp <- as.numeric(sharp$windsp)
sharp$sky <- as.numeric(sharp$sky)
sharp$noise <- as.numeric(sharp$noise)
sharp$survey_date <- as.Date(sharp$surveydate)
install.packages("janitor")
library(janitor)
library(moments)
library(dplyr)
library(tidyverse)
library(ggplot2)
setwd("/Users/alyssabueno/Desktop/airline_loyalty")
history <- read.csv("customer_loyalty_history.csv", stringsAsFactors = FALSE)
library(janitor)
library(moments)
library(dplyr)
library(tidyverse)
library(ggplot2)
setwd("/Users/alyssabueno/Desktop/airline_loyalty")
history <- read.csv("customer_loyalty_history.csv", stringsAsFactors = FALSE)
View(history)
# change column names to lowercase and snakecase
history <- clean_names(history)
# change NA to 0 or NULL
history[is.na(history)] <- 0
history <- clean_names(history) # change column names to lowercase and snakecase
history[is.na(history)] <- 0 # change NA to 0 or NULL
history$postal_code <- gsub(" ", "", history$postal_code) # remove spaces from the postal codes
# making columns numeric
str(history)
history$loyalty_number <- as.numeric(history$loyalty_number)
history$salary <- as.numeric(history$salary)
history$clv <- as.numeric(history$clv)
history$enrollment_year <- as.numeric(history$enrollment_year)
history$enrollment_month <- as.numeric(history$enrollment_month)
# making columns numeric
str(history)
# check for skew
check_skewness <- function(history) {
sapply(history, function(col) if (is.numeric(col)) skewness(col, na.rm = TRUE) else NA)
}
print(check_skewness())
print(check_skewness)
View(check_skewness)
library(moments)
# check for skew
check_skewness <- function(history) {
sapply(history, function(col) if (is.numeric(col)) skewness(col, na.rm = TRUE) else NA)
}
skew_values <- check_skewness(history)
print(skew_values)
# clv is positively skewed >3
# salary is positively skewed = 1.2
history$clv <- log1p(history$clv)
history$salary <- sqrt(log1p(history$salary))
any(history$salary < -1)
unique(history$salary)
summary(history$salary)
setwd("/Users/alyssabueno/Desktop/airline_loyalty")
history <- read.csv("customer_loyalty_history.csv", stringsAsFactors = FALSE)
View(history)
history <- clean_names(history) # change column names to lowercase and snakecase
history[is.na(history)] <- 0 # change NA to 0 or NULL
history$postal_code <- gsub(" ", "", history$postal_code) # remove spaces from the postal codes
history$loyalty_number <- as.numeric(history$loyalty_number)
history$salary <- as.numeric(history$salary)
history$clv <- as.numeric(history$clv)
history$enrollment_year <- as.numeric(history$enrollment_year)
history$enrollment_month <- as.numeric(history$enrollment_month)
history$salary <- abs(history$salary) # changing the negative salary values positive
# clv is positively skewed >3
# salary is positively skewed = 1.2
history$clv <- log1p(history$clv)
history$salary <- sqrt(log1p(history$salary))
View(history)
history <- history %>%
filter(salary != 0)
zero_rows <- sum(history$salary == 0, na.rm = TRUE)
print(zero_rows)
View(flights)
View(flights)
skew_total_flights <- skewness(flights$skew_total_flights)
install.packages("moments")
library(tidyverse)
library(dplyr)
library(moments)
setwd("/Users/alyssabueno/Desktop/airline_loyalty")
flights <- read.csv("customer_flight_activity.csv", stringsAsFactors = FALSE)
##changing column names
flights <- clean_names(flights)
##checking the data types in each column
str(flights)
flights$loyalty_number <- as.numeric(flights$loyalty_number)
flights$month <- as.numeric(flights$month)
flights$total_flights <- as.numeric(flights$total_flights)
flights$distance <- as.numeric(flights$distance)
flights$points_accumulated <- as.numeric(flights$points_accumulated)
flights$points_redeemed <- as.numeric(flights$points_redeemed)
flights$dollar_cost_points_redeemed <- as.numeric(flights$dollar_cost_points_redeemed)
flights$year <- as.numeric(flights$year)
flights <- flights %>%
filter(points_redeemed <= points_accumulated) # filter out rows where points_redeemed > points_accumulated
flights$points_accumulated <- log1p(flights$points_accumulated)
flights$points_redeemed <- log1p(flights$points_redeemed)
flights$dollar_cost_points_redeemed <- log1p(flights$dollar_cost_points_redeemed)
flights$distance <- log1p(flights$distance)
##square root transformation on total_flights column
flights$total_flights <- sqrt(log1p(flights$total_flights))
View(flights)
#download as csv
write.csv(flights, "flights_transformed.csv", na = "")
setwd("/Users/alyssabueno/Desktop/airline_loyalty")
history <- read.csv("customer_loyalty_history.csv", stringsAsFactors = FALSE)
View(history)
history <- clean_names(history) # change column names to lowercase and snakecase
history[is.na(history)] <- 0 # change NA to 0 or NULL
history$postal_code <- gsub(" ", "", history$postal_code) # remove spaces from the postal codes
str(history)
history$loyalty_number <- as.numeric(history$loyalty_number)
history$salary <- as.numeric(history$salary)
history$clv <- as.numeric(history$clv)
history$enrollment_year <- as.numeric(history$enrollment_year)
history$enrollment_month <- as.numeric(history$enrollment_month)
history$salary <- abs(history$salary) # changing the negative salary values positive
# clv is positively skewed >3
# salary is positively skewed = 1.2
history$clv <- log1p(history$clv)
history$salary <- sqrt(log1p(history$salary))
zero_rows <- sum(history$salary == 0, na.rm = TRUE)
print(zero_rows)
history <- history %>%
filter(salary != 0) # filtering out rows with salary = 0
history <- history %>%
mutate(country = as.factor(country),
province = as.factor(province),
city = as.factor(city),
postal_code = as.factor(postal_code),
gender = as.factor(gender),
education = as.factor(education),
marital_status = as.factor(marital_status),
loyalty_card = as.factor(loyalty_card),
enrollment_type = as.factor(enrollment_type))
View(history)
history <- clean_names(history) # change column names to lowercase and snakecase
View(history)
str(history)
library(caret)
install.packages("lattice")
install.packages("lattice")
library(caret)
library(pROC)
install.packages("pROC")
install.packages("pROC")
library(pROC)
# training data 70% train, 30% test
set.seed(123)
library(pROC)
# training data 70% train, 30% test
set.seed(123)
train_index <- createDataPartition(history$clv, p = 0.7, list = FALSE)
train_data <- history[train_index, ]
test_data <- history[-train_index]
# train logistic regression model
log_model <- glm(clv ~ salary + gender + education + martial_status + loyalty_card)
# train logistic regression model
log_model <- glm(enrollment_type ~ salary + gender + education + martial_status + loyalty_card)
library(party)
install.packages("party")
library(party)
setwd("/Users/alyssabueno/Desktop/airline_loyalty")
history <- read.csv("customer_loyalty_history.csv", stringsAsFactors = FALSE)
View(history)
history <- clean_names(history) # change column names to lowercase and snakecase
history[is.na(history)] <- 0 # change NA to 0 or NULL
history$salary[is.na(history$salary)] <- median(history$salary, na.rm = TRUE) # change 0 salary values to median
history$postal_code <- gsub(" ", "", history$postal_code) # remove spaces from the postal codes
history <- history %>%
mutate(country = as.factor(country),
province = as.factor(province),
city = as.factor(city),
postal_code = as.factor(postal_code),
gender = as.factor(gender),
education = as.factor(education),
marital_status = as.factor(marital_status),
loyalty_card = as.factor(loyalty_card),
enrollment_type = as.factor(enrollment_type))
history$loyalty_number <- as.numeric(history$loyalty_number)
history$salary <- as.numeric(history$salary)
history$clv <- as.numeric(history$clv)
history$enrollment_year <- as.numeric(history$enrollment_year)
history$enrollment_month <- as.numeric(history$enrollment_month)
history$salary <- abs(history$salary) # changing the negative salary values positive
history %>% gather() %>%
plot <- history %>% gather() %>%
plot(plot)
plot <- history %>% gather() %>%
ggplot(aes(x = clv)) +
geom_histogram(fill = "steelblue", alpha = 0.7) +
theme_minimal() +
facet_wrap(~key, scales = "free)"
geom_histogram(alpha = 0.7) +
plot <- history %>% gather() %>%
ggplot(aes(x = clv)) +
geom_histogram(fill = "steelblue", alpha = 0.7) +
theme_minimal() +
facet_wrap(~key, scales = "free")
plot(plot)
plot <- history %>% gather() %>%
ggplot(aes(x = value)) +
geom_histogram(fill = "steelblue", alpha = 0.7) +
theme_minimal() +
facet_wrap(~key, scales = "free")
View(history)
plot <- history %>% gather(clv, salary) %>%
ggplot(aes(x = value)) +
geom_histogram(fill = "steelblue", alpha = 0.7) +
theme_minimal() +
facet_wrap(~key, scales = "free")
history %>% gather(clv, salary) %>%
ggplot(aes(x = value)) +
geom_histogram(fill = "steelblue", alpha = 0.7) +
theme_minimal() +
facet_wrap(~key, scales = "free")
history %>% gather(clv, salary) %>%
ggplot(aes(x = value)) +
geom_histogram(fill = "steelblue", alpha = 0.7) +
theme_minimal() +
facet_wrap(~key, scales = "free")
# train logistic regression model
log_model <- glm(enrollment_type ~ salary + gender + education + martial_status + loyalty_card)
head(history)
history <- history %>%
mutate(history$country = as.factor(history$country),
colSums(is.na(history))
str(history)
# train logistic regression model
log_model <- glm(enrollment_type ~ salary)
# train logistic regression model
log_model <- glm(history$enrollment_type ~ salary)
# train logistic regression model
log_model <- glm(history$enrollment_type ~ history$salary)
# train logistic regression model
log_model <- glm(history$clv ~ history$gender + history$education + history$salary)
# model summary
sumary(log_model)
# model summary
summary(log_model)
# model evaluation
test_data$pred_prob <- predict(log_model, newdata = test_data, type = "response")
# model evaluation
test_data$pred_prob <- predict(log_model, newdata = history, type = "response")
# train logistic regression model
log_model <- glm(history$clv ~ history$country + history$province + history$city + history$gender + history$education + history$salary)
# train logistic regression model
log_model <- glm(history$clv ~ history$province + history$city + history$gender + history$education + history$salary)
# model summary
summary(log_model)
# train logistic regression model
log_model <- glm(history$clv ~ history$gender + history$education + history$salary + history$marital_status + history$loyalty_card + history$salary)
# model summary
summary(log_model)
